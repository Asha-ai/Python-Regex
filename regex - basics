# Example :1 - re.findall()
# Extract names and ages using Regex
import re
nameage = '''
Asha 32 and Charan 5
Veera 38 and Ragchav 9
'''
# read single and double digit numbers
ages = re.findall(r'\d{1,3}',nameage)
#names start with capital letter
names = re.findall(r'[A-Z][a-z]*',nameage)
print(ages)   # ['32', '5', '38', '9']
print(names)  # ['Asha', 'Charan', 'Veera', 'Ragchav']


ageDict = {} ## create dictionary with names and ages 
x=0
for i in names:
  ageDict[i] = ages[x]
  x = x+1
print(ageDict)  # o/p  {'Asha': '32', 'Charan': '5', 'Veera': '38', 'Ragchav': '9'}

# Play arround
# play with this by changing differnt formats - and try new
import re
nameage = '''
Asha 33 and Charan 6
Veera 35 and Ragchav 8
'''
names = re.findall(r'\d{1,2}',nameage) # if we give only 2 it is able to give right answer , try other ways
age = re.findall(r'[A-Z][a-z]',nameage) # if you dont give * it is reading only two alphabets

print(names)
print(age)

# Example :6 - findall() for list of words
offr = "we are offering services as poa,poc"
find=["offering","poa"]
words=re.findall("\w+",offr)
result=[x for x in find if x in words]
result


#create dict
ageDict1 = {}
x = 0
for i in names:
  ageDict1[i] = age[x]
  x= x+1
print(ageDict1)  


# Example -2
## re.serach()
# re.search()
# Find word in a string
import re
if re.search('services',"we are offering services like ppa,pna and poa telecomservices "):
        print("services is there")
        
# Example -3 : re.findall() 
# re.findall() - to get print all search words in text
ser = re.findall('service',"we are offering services like ppa,pna and poa telecomservices")
for i in ser:
  print(i)

# Example -4 : re.finditer()
# get starting and ending index of a string
st = "we are offering services like ppa,pna and poa telecomservices"
for i in re.finditer("service",st):
  loct = i.span()
  l = i
  print(loct)
  print(i)
  
 # Example -5 : re.findall()
 # match words with particy=ular pattern
st_pat = "mad had bad cad"
allst = re.findall("[mhbc]ad",st_pat) # o/p : ['mad', 'had', 'bad', 'cad']
print(allst)

## match from to 
st_pat = "mad had bad cad"   
allst1 = re.findall("[b-h]ad",st_pat) # match series of range of characters
print(allst1)    # o/p : ['had', 'bad', 'cad']

# Example : 6
## match the range except use ^ caret symbol
st_pat = "mad had bad cad"
allst2 = re.findall("[^b-h]ad",st_pat) # print words the range except b-h
print(allst2)  #o/p : ['mad']

# Note: play with by giving capitals and smalls and other techniques, like change and see te ranges etc

# Example :7  replace a word
# re.compile and re.sub()
import re
f = "mat,cat,rat"
reg = re.compile("[r]at")
reg 
fd = reg.sub("foot",f)
fd   # substitured food in the place of rat # o/p  : mat,cat,foot

# Example :8
# re.search() - back slash problem
import re
back = "here is \\with me "
print(back) # o/p : here is \with me 
# solve this back slash problem using 
import re
back = "here is \\with me "
re.search(r"\\with me",back) # o/p : <re.Match object; span=(8, 16), match='\\with me'>
